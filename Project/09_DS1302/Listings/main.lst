C51 COMPILER V9.57.0.0   MAIN                                                              12/07/2019 19:48:41 PAGE 1   


C51 COMPILER V9.57.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: E:\MDK\install\Core\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\List
                    -ings\main.lst) OBJECT(.\Objects\main.obj)

line level    source

   1          #include <reg52.h>
   2          #include <intrins.h>
   3          #define uchar unsigned char
   4          #define uint unsigned int
   5          #define dec(dat) ((dat>>4)*10+(dat&0x0f))               // BCD码转十进制
   6          sbit HC138_A = P2^5;
   7          sbit HC138_B = P2^6;
   8          sbit HC138_C = P2^7;
   9          sbit RST = P1^3;
  10          sbit IO = P2^3;
  11          sbit SCLK = P1^7;
  12          
  13          uchar code tab[] = {0xc0,0xf9,0xa4,0xb0,0x99,0x92,0x82,0xf8,0x80,0x90,0xbf};
  14          uchar code select[] = {0x01,0x02,0x04,0x08,0x10,0x20,0x40,0x80};
  15          uchar write_addr[] = {0x80,0x82,0x84,0x86,0x88,0x8a,0x8c};
  16          uchar read_addr[] = {0x81,0x83,0x85,0x87,0x89,0x8b,0x8d};
  17          uchar Time[7] = {0x00,0x35,0x09,0x06,0x12,0x05,0x19};
  18          
  19          void Delay1ms()         //@11.0592MHz
  20          {
  21   1              unsigned char i, j;
  22   1              _nop_();
  23   1              _nop_();
  24   1              _nop_();
  25   1              i = 11;
  26   1              j = 190;
  27   1              do
  28   1              {
  29   2                      while (--j);
  30   2              } while (--i);
  31   1      }
  32          
  33          void System_Init()
  34          {
  35   1              HC138_A = 1;
  36   1              HC138_B = 0;
  37   1              HC138_C = 1;
  38   1              WR = 0;
  39   1              P0 = 0x00;
  40   1              HC138_A = 0;
  41   1              HC138_B = 0;
  42   1              HC138_C = 1;
  43   1              WR = 0;
  44   1              P0 = 0xFF;
  45   1      }
  46          
  47          void LED_Display(uchar selection, uchar segment)
  48          {
  49   1              HC138_A = 0;
  50   1              HC138_B = 1;
  51   1              HC138_C = 1;
  52   1              WR = 0;
  53   1              P0 = 0x00;
  54   1              HC138_A = 1;
C51 COMPILER V9.57.0.0   MAIN                                                              12/07/2019 19:48:41 PAGE 2   

  55   1              HC138_B = 1;
  56   1              HC138_C = 1;
  57   1              WR = 0;
  58   1              P0 = tab[segment];
  59   1              HC138_A = 0;
  60   1              HC138_B = 1;
  61   1              HC138_C = 1;
  62   1              WR = 0;
  63   1              P0 = select[selection];
  64   1              Delay1ms();
  65   1              HC138_A = 1;
  66   1              HC138_B = 1;
  67   1              HC138_C = 1;
  68   1              WR = 0;
  69   1              P0 = 0xff;
  70   1      }
  71          
  72          /**********************************************************
  73          *  函数名称：DS1302写操作函数
  74          *  日期：2019-10-4
  75          *  姓名：ZhangHJ
  76          *  说明：写操作包含两个参数,add表示要写入的地址;wdata表示要写入的数据
  77          *                                1. 读写操作需要先将RST拉高才能进行
  78          *                                2. 先写入控制字节,在时钟上升沿串行写入数据
  79          *                                3. 再写入数据字节,同样在时钟上升沿写入数据
  80          *                                4. 最后拉低RST禁止数据传输
  81          ***********************************************************/
  82          void DS1302Write(uchar add,uchar wdata)
  83          {
  84   1              uchar a;
  85   1              //wdata = hex(wdata);                                   // 转换为BCD码
  86   1              RST=0;                                                                  // 拉低RST引脚,终止数据传输
  87   1              SCLK=0;                                                                 // 拉低SCLK引脚,清零时钟线
  88   1              RST=1;                                                                  // 拉高RST引脚,所有数据传输都要拉高RST脚,启动控制逻辑
  89   1              //先写入控制字节
  90   1              for(a=0; a<8; a++)
  91   1              {
  92   2                              IO= add & 0x01;                                 // IO引脚准备好要写入的1位数据
  93   2                              SCLK=1;                                                 // SCLK上升沿,1位数据从IO脚写入,低位先写入
  94   2                              add>>=1;                                                // 数据右移1位
  95   2                              SCLK=0;                                                 // 拉低SCLK,为下次写入准备,循环8次写入1字节
  96   2              }
  97   1              //再写入数据字节
  98   1              for(a=0; a<8; a++)
  99   1              {
 100   2                              IO= wdata & 0x01;
 101   2                              SCLK=1;
 102   2                              wdata>>=1;
 103   2                              SCLK=0;
 104   2              }
 105   1              RST=0;                                                                  // 数据传输完拉低RST
 106   1      }  
 107          
 108          
 109          
 110          /**********************************************************
 111          *  函数名称：DS1302读操作函数
 112          *  日期：2019-10-4
 113          *  姓名：ZhangHJ
 114          *  说明：读操作只需一个参数,即需要读取的寄存器地址add
 115          *                                1. 首先需要将需要读取的地址(1Byte)写入寄存器,在上升沿进行写入操作
 116          *                                2. 之后读取该地址中的数据,在下降沿读取数据
C51 COMPILER V9.57.0.0   MAIN                                                              12/07/2019 19:48:41 PAGE 3   

 117          *                                3. 最后返回读取到的1Byte数据
 118          ***********************************************************/ 
 119          uchar DS1302Read(uchar add)
 120          {
 121   1              uchar a, rdata=0;
 122   1              RST = 0;                                                                                        // 拉低RST引脚,终止数据传输
 123   1              SCLK = 0;                                                                                       // 拉低SCLK引脚,清零时钟线
 124   1              RST = 1;                                                                                        // 拉高RST引脚,启动控制逻辑
 125   1              //发送控制字节
 126   1              for(a=0; a<8; a++)
 127   1              {
 128   2                      SCLK = 0;
 129   2                      IO = add & 0x01;
 130   2                      SCLK = 1;                                                                               // 制造一个上升沿,写入地址
 131   2                      add >>= 1;
 132   2              }
 133   1              //读1字节数据
 134   1              for(a=0; a<8; a++)
 135   1              {
 136   2                      SCLK = 1;
 137   2                      rdata >>= 1;
 138   2                      SCLK = 0;                                                                               // 制造一个下降沿,读取数据
 139   2                      if(IO)
 140   2                      {                                                                                               // 如果读到1
 141   3                              rdata |= 0x80;                                                          // 把最高位置为1,记录到rdata中
 142   3                      }
 143   2              }
 144   1              RST=0;                                                                                          // 拉低RST
 145   1              SCLK=1;
 146   1              IO=0;
 147   1              IO=1;
 148   1              //return dec(d);                                                                // 读取的数据转换成十进制
 149   1              return rdata;
 150   1      }
 151          
 152          
 153          
 154          /**********************************************************
 155          *  函数名称：DS1302初始化函数
 156          *  日期：2019-10-4
 157          *  姓名：ZhangHJ
 158          *  说明：初始化即为对DS1302初始数据的写入
 159          *                                1. 首先需要关闭写保护,以允许数据写入
 160          *                                2. 之后按"秒分时日月周年"的顺序写入初始数据
 161          *                                3. 最后开启写保护,禁止数据写入
 162          ***********************************************************/
 163          void ds1302_init()
 164          {
 165   1         uchar k;
 166   1         DS1302Write(0x8e,0x00);                              // 禁止写保护，即允许数据写入
 167   1              if(DS1302Read(0x81) & 0x80)                             // 掉电检测,时钟停止标志位
 168   1         for(k=0;k<7;k++)                                                     // 写入7个字节的时钟信号：秒分时日月周年
 169   1         {
 170   2           DS1302Write(write_addr[k],Time[k]);
 171   2         }
 172   1         DS1302Write(0x8e,0x80);                              // 打开写保护,禁止数据写入
 173   1      }
 174          
 175          
 176          
 177          
 178          /**********************************************************
C51 COMPILER V9.57.0.0   MAIN                                                              12/07/2019 19:48:41 PAGE 4   

 179          *  函数名称：DS1302数据读取函数
 180          *  日期：2019-10-4
 181          *  姓名：ZhangHJ
 182          *  说明：数据读取即为按寄存器地址读取数据的过程
 183          *                                直接按地址读取寄存器中的数据,然后将数据放到time数组里保存即可
 184          ***********************************************************/ 
 185          void read_time()
 186          {
 187   1         uchar n;
 188   1         for(n=0;n<7;n++)
 189   1          Time[n]=DS1302Read(read_addr[n]);   //读取秒分时日月周年
 190   1      }
 191          
 192          void Time_Display()
 193          {
 194   1              LED_Display(0,dec(Time[2])/10);
 195   1              LED_Display(1,dec(Time[2])%10);
 196   1              LED_Display(2,10);
 197   1              LED_Display(3,dec(Time[1])/10);
 198   1              LED_Display(4,dec(Time[1])%10);
 199   1              LED_Display(5,10);
 200   1              LED_Display(6,dec(Time[0])/10);
 201   1              LED_Display(7,dec(Time[0])%10);
 202   1      }
 203          
 204          void main()
 205          {
 206   1              uchar i;
 207   1              System_Init();
 208   1              ds1302_init();
 209   1              while(1)
 210   1              {
 211   2                      read_time();
 212   2                      for(i=0; i<30; i++)
 213   2                      Time_Display();
 214   2              }
 215   1      }
 216          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    486    ----
   CONSTANT SIZE    =     19    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     21    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
